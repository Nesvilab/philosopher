# Philosopher pipeline configuration file.
#
# The pipeline mode automates the processing done by Philosopher. First, check
# the steps you want to execute in the commands section and change them to
# 'yes'. For each selected command, go to its section and adjust the parameters
# accordingly to your analysis.
#
# Usage:
# philosopher pipeline --config <this_configuration_file> [list_of_data_set_folders]

version: 20190322

analytics: true              # reports when a workspace is created for usage estimation (default true)
slackToken: ''               # specify the Slack API token
slackChannel: ''             # specify the channel name

commands:
  workspace: yes             # manage the experiment workspace for the analysis
  database: no               # target-decoy database formatting
  comet: no                  # peptide spectrum matching with Comet
  msfragger: no              # peptide spectrum matching with MSFragger
  peptideprophet: no         # peptide assignment validation
  ptmprophet: no             # PTM site localization
  proteinprophet: no         # protein identification validation
  filter: no                 # statistical filtering, validation and False Discovery Rates assessment
  freequant: no              # label-free Quantification
  labelquant: no             # isobaric Labeling-Based Relative Quantification
  report: no                 # multi-level reporting for both narrow-searches and open-searches
  cluster: no                # protein report based on protein clusters
  abacus: no                 # combined analysis of LC-MS/MS results

database:
  add: ''                    # add custom sequences (UniProt FASTA format only)
  annotate: ''               # process a ready-to-use database
  contam: true               # add common contaminants
  custom: ''                 # use a pre formatted custom database
  enzyme: trypsin            # enzyme for digestion (trypsin, lys_c, lys_n, glu_c, chymotrypsin) (default "trypsin")
  id: ''                     # UniProt proteome ID
  isoform: false             # add isoform sequences
  prefix: rev_               # decoy prefix to be added (default "rev_")
  reviewed: true             # use only reviewed sequences from Swiss-Prot

comet:
  noindex: true              # skip raw file indexing
  param: ''                  # comet parameter file (default "comet.params.txt")
  raw: mzML                  # format of the spectra file

msfragger:
  path: ''                   # path to MSFragger java file
  memmory: 8                 # how much memory in GB to use
  param: ''                  # MSFragger parameter file
  raw: mzML                  # spectra format

peptideprophet:
  extension: pepxml          # pepXML file extension
  accmass: false             # use Accurate Mass model binning
  database: ''               # path to the database
  decoy: rev_                # semi-supervised mode, protein name prefix to identify Decoy entries
  decoyprobs: false          # compute possible non-zero probabilities for Decoy entries on the last iteration
  enzyme: ''                 # enzyme used in sample (optional)
  exclude: false             # exclude deltaCn*, Mascot*, and Comet* results from results (default Penalize * results)
  expectscore: false         # use expectation value as the only contributor to the f-value for modeling
  forcedistr: false          # bypass quality control checks, report model despite bad modeling
  glyc: false                # enable peptide Glyco motif model
  icat: false                # apply ICAT model (default Autodetect ICAT)
  instrwarn: false           # warn and continue if combined data was generated by different instrument models
  leave: false               # leave alone deltaCn*, Mascot*, and Comet* results from results (default Penalize * results)
  maldi: false               # enable MALDI mode
  masswidth: 5               # model mass width (default 5)
  minpeplen: 7               # minimum peptide length not rejected (default 7)
  minpintt: 2                # minimum number of NTT in a peptide used for positive pI model (default 2)
  minpiprob: 0.9             # minimum probability after first pass of a peptide used for positive pI model (default 0.9)
  minprob: 0.05              # report results with minimum probability (default 0.05)
  minrtntt: 2                # minimum number of NTT in a peptide used for positive RT model (default 2)
  minrtprob: 0.9             # minimum probability after first pass of a peptide used for positive RT model (default 0.9)
  neggamma: false            # use Gamma distribution to model the negative hits
  noicat: false              # do no apply ICAT model (default Autodetect ICAT)
  nomass: false              # disable mass model
  nonmc: false               # disable NMC missed cleavage model
  nonparam: false            # use semi-parametric modeling, must be used in conjunction with --decoy option
  nontt: false               # disable NTT enzymatic termini model
  optimizefval: false        # (SpectraST only) optimize f-value function f(dot,delta) using PCA
  phospho: false             # enable peptide Phospho motif model
  pi: false                  # enable peptide pI model
  ppm: false                 # use PPM mass error instead of Dalton for mass modeling
  zero: false                # report results with minimum probability 0

ptmprophet:
  autodirect: false          # use direct evidence when the lability is high, use in combination with LABILITY
  cions: ''                  # use specified C-term ions, separate multiple ions by commas (default: y for CID, z for ETD)
  direct: false              # use only direct evidence for evaluating PTM site probabilities
  em: 1                      # set EM models to 0 (no EM), 1 (Intensity EM Model Applied) or 2 (Intensity and Matched Peaks EM Models Applied)
  fragppmtol: 15             # when computing PSM-specific mass_offset and mass_tolerance, use specified default +/- MS2 mz tolerance on fragment ions
  ifrags: false              # use internal fragments for localization
  keepold: false             # retain old PTMProphet results in the pepXML file
  lability: false            # compute Lability of PTMs
  massdiffmode: false        # use the Mass Difference and localize
  massoffset: 0              # adjust the massdiff by offset (0 = use default)
  maxfragz: 0                # limit maximum fragment charge (default: 0=precursor charge, negative values subtract from precursor charge)
  maxthreads: 1              # use specified number of threads for processing
  mino: 0                    # use specified number of pseudo-counts when computing Oscore (0 = use default)
  minprob: 0                 # use specified minimum probability to evaluate peptides
  mods: ''                   # specify modifications
  mztol: 0.1                 # use specified +/- MS2 mz tolerance on site specific ions
  nions: ''                  # use specified N-term ions, separate multiple ions by commas (default: a,b for CID, c for ETD)
  nominofactor: false        # disable MINO factor correction when MINO= is set greater than 0 (default: apply MINO factor correction)
  ppmtol: 1                  # use specified +/- MS1 ppm tolerance on peptides which may have a slight offset depending on search parameters
  verbose: false             # produce Warnings to help troubleshoot potential PTM shuffling or mass difference issues

proteinprophet:
  accuracy: false            # equivalent to --minprob 0
  allpeps: false             # consider all possible peptides in the database in the confidence model
  confem: false              # use the EM to compute probability given the confidence
  delude: false              # do NOT use peptide degeneracy information when assessing proteins
  excludezeros: false        # exclude zero prob entries
  fpkm: false                # model protein FPKM values
  glyc: false                # highlight peptide N-glycosylation motif
  icat: false                # highlight peptide cysteines
  instances: false           # use Expected Number of Ion Instances to adjust the peptide probabilities prior to NSP adjustment
  iprophet: false            # input is from iProphet
  logprobs: false            # use the log of the probabilities in the Confidence calculations
  maxppmdiff: 20             # maximum peptide mass difference in PPM (default 20)
  minprob: 0.05              # peptideProphet probabilty threshold (default 0.05)
  mufactor: 1                # fudge factor to scale MU calculation (default 1)
  nogroupwts: false          # check peptide's Protein weight against the threshold (default: check peptide's Protein Group weight against threshold)
  nonsp: false               # do not use NSP model
  nooccam: false             # non-conservative maximum protein list
  noprotlen: false           # do not report protein length
  normprotlen: false         # normalize NSP using Protein Length
  protmw: false              # get protein mol weights
  softoccam: false           # peptide weights are apportioned equally among proteins within each Protein Group (less conservative protein count estimate)
  unmapped: false            # report results for UNMAPPED proteins

filter:
  pepxml:                    # overwrites pepXML file NAME (needs to be the same in all directories)
  protxml:                   # overwrites protxml file PATH (needs to be the same in all directories or combined)
  psmFDR: 0.01               # psm FDR level (default 0.01)
  peptideFDR: 0.01           # peptide FDR level (default 0.01)
  ionFDR: 0.01               # peptide ion FDR level (default 0.01)
  proteinFDR: 0.01           # protein FDR level (default 0.01)
  peptideProbability: 0.7    # top peptide probability threshold for the FDR filtering (default 0.7)
  proteinProbability: 0.5    # protein probability threshold for the FDR filtering (not used with the razor algorithm) (default 0.5)
  peptideWeight: 1           # threshold for defining peptide uniqueness (default 1)
  tag: rev_                  # decoy tag (default "rev_")
  razor: false               # use razor peptides for protein FDR scoring
  picked: false              # apply the picked FDR algorithm before the protein scoring
  mapMods: false             # map modifications acquired by an open search
  models: false              # print model distribution
  sequential: false          # alternative algorithm that estimates FDR using both filtered PSM and Protein lists

freequant:
  peakTimeWindow: 0.4        # specify the time windows for the peak (minute) (default 0.4)
  retentionTimeWindow: 3     # specify the retention time window for xic (minute) (default 3)
  tolerance: 10              # m/z tolerance in ppm (default 10)

labelquant:
  annotation: ''             # annotation file with custom names for the TMT channels
  bestPSM: false             # select the best PSMs for protein quantification
  level: 2                   # ms level for the quantification
  minProb: 0.7               # only use PSMs with a minimum probability score
  plex:                      # number of channels
  purity: 0.5                # ion purity threshold (default 0.5)
  removeLow: 0.0             # ignore the lower 3% PSMs based on their summed abundances
  tolerance: 20              # m/z tolerance in ppm (default 20)
  uniqueOnly: false          # report quantification based on only unique peptides

report:
  msstats: false             # create an output compatible to MSstats
  withDecoys: false          # add decoy observations to reports
  mzID: false                # create a mzID output

cluster:
  organismUniProtID: ''      # UniProt proteome ID
  level: 0.9                 # cluster identity level (default 0.9)

abacus:
  labels: false              # indicates whether the data sets include TMT labels or not
  protein: combined.prot.xml # combined protein file
  peptide: combined.pep.xml  # combined peptide file
  proteinprobability: 0.9    # minimum protein probability (default 0.9)
  peptideProbability: 0.5    # minimum peptide probability (default 0.5)
  picked: false              # apply the picked FDR algorithm before the protein scoring
  razor: false               # use razor peptides for protein FDR scoring
  tag: rev_                  # decoy tag (default "rev_")
  uniqueOnly: false          # report TMT quantification based on only unique peptides
