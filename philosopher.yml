# Philosopher pipeline configuration file.
#
# The pipeline mode automates the processing done by Philosopher. First, check
# the steps you want to execute in the commands section and change them to
# 'yes'. For each selected command, go to its section and adjust the parameters
# accordingly to your analysis.
#
# If you want to include MSFragger and TMT-Integrator into your analysis, you will
# haver o download them separately and then add their location tot their configuration
#
# Usage:
# philosopher pipeline --config <this_configuration_file> [list_of_data_set_folders]

analytics: true                                # reports when a workspace is created for usage estimation (default true)
slackToken:                                    # specify the Slack API token
slackChannel:                                  # specify the channel name

commands:
  workspace: yes                               # manage the experiment workspace for the analysis
  database: no                                 # target-decoy database formatting
  comet: no                                    # peptide spectrum matching with Comet
  msfragger: no                                # peptide spectrum matching with MSFragger
  peptideprophet: no                           # peptide assignment validation
  ptmprophet: no                               # PTM site localization
  proteinprophet: no                           # protein identification validation
  filter: no                                   # statistical filtering, validation and False Discovery Rates assessment
  freequant: no                                # label-free Quantification
  labelquant: no                               # isobaric Labeling-Based Relative Quantification
  report: no                                   # multi-level reporting for both narrow-searches and open-searches
  cluster: no                                  # protein report based on protein clusters
  abacus: no                                   # combined analysis of LC-MS/MS results
  tmtintegrator: no                            # integrates channel abundances from multiple TMT samples

database:
  protein_database:                            # path to the target-decoy protein database
  decoy_tag: rev_                              # prefix tag used added to decoy sequences

comet:
  noindex: true                                # skip raw file indexing
  param:                                       # comet parameter file (default "comet.params.txt")
  raw: mzML                                    # format of the spectra file

msfragger:
  path:                                        # path to MSFragger jar
  memmory: 8                                   # how much memory in GB to use
  param:                                       # MSFragger parameter file
  raw: mzML                                    # spectra format
  num_ threads: 0                              # 0=poll CPU to set num threads; else specify num threads directly (max 64)
  precursor_mass_lower: -20                    # lower bound of the precursor mass window
  precursor_mass_upper: 20                     # upper bound of the precursor mass window
  precursor_mass_units: 1                      # 0=Daltons, 1=ppm
  precursor_true_tolerance: 20                 # true precursor mass tolerance (window is +/- this value)
  precursor_true_units: 1                      # 0=Daltons, 1=ppm
  fragment_mass_tolerance: 20                  # fragment mass tolerance (window is +/- this value)
  fragment_mass_units: 1                       # fragment mass tolerance units (0 for Da, 1 for ppm)
  calibrate_mass: 0                            # 0=Off, 1=On, 2=On and find optimal parameters
  isotope_error:                               # 0=off, -1/0/1/2/3 (standard C13 error)
  mass_offsets: 0                              # allow for additional precursor mass window shifts. Multiplexed with isotope_error. mass_offsets = 0/79.966 can be used as a restricted ‘open’ search that looks for unmodified and phosphorylated peptides (on any residue)
  precursor_mass_mode: selected                # selected or isolated
  localize_delta_mass: 0                       # this allows shifted fragment ions - fragment ions with mass increased by the calculated mass difference, to be included in scoring
  delta_mass_exclude_ranges: (-1.5,3.5)        # exclude mass range for shifted ions searching
  fragment_ion_series: b,y                     # ion series used in search
  search_enzyme_name: Trypsin                  # name of enzyme to be written to the pepXML file
  search_enzyme_cutafter: KR                   # residues after which the enzyme cuts
  search_enzyme_butnotafter: P                 # residues that the enzyme will not cut before
  num_enzyme_termini: 2                        # 2 for enzymatic, 1 for semi-enzymatic, 0 for nonspecific digestion
  allowed_missed_cleavage: 1                   # maximum value is 5
  clip_nTerm_M: 1                              # specifies the trimming of a protein N-terminal methionine as a variable modification (0 or 1)
  variable_mod_01: 15.99490 M                  # variable modification
  variable_mod_02: 42.01060 [^                 # variable modification
  variable_mod_03:                             # variable modification
  variable_mod_04:                             # variable modification
  allow_multiple_variable_mods_on_residue: 1   # static mods are not considered
  max_variable_mods_per_mod: 3                 # maximum of 5
  max_variable_mods_combinations: 5000         # maximum of 65534, limits number of modified peptides generated from sequence
  output_file_extension: pepXML                # file extension of output files
  output_format: pepXML                        # file format of output files (pepXML or tsv)
  output_report_topN: 1                        # reports top N PSMs per input spectrum
  output_max_expect: 50                        # suppresses reporting of PSM if top hit has expectation greater than this threshold
  report_alternative_proteins: 0               # 0=no, 1=yes
  precursor_charge: 1 4                        # assume range of potential precursor charge states. Only relevant when override_charge is set to 1
  override_charge: 0                           # 0=no, 1=yes to override existing precursor charge states with precursor_charge parameter
  digest_min_length: 7                         # minimum length of peptides to be generated during in-silico digestion
  digest_max_length: 50                        # maximum length of peptides to be generated during in-silico digestion
  digest_mass_range: 500.0 5000.0              # mass range of peptides to be generated during in-silico digestion in Daltons
  max_fragment_charge: 2                       # maximum charge state for theoretical fragments to match (1-4)
  track_zero_topN: 0                           # in addition to topN results, keep track of top results in zero bin
  zero_bin_accept_expect: 0                    # boost top zero bin entry to top if it has expect under 0.01 - set to 0 to disable
  zero_bin_mult_expect: 1                      # disabled if above passes - multiply expect of zero bin for ordering purposes (does not affect reported expect)
  add_topN_complementary: 0                    # inserts complementary ions corresponding to the top N most intense fragments in each experimental spectra
  minimum_peaks: 15                            # required minimum number of peaks in spectrum to search (default 10)
  use_topN_peaks: 100                          # pre-process experimental spectrum to only use top N peaks
  min_fragments_modelling: 2                   # minimum number of matched peaks in PSM for inclusion in statistical modeling
  min_matched_fragments: 4                     # minimum number of matched peaks for PSM to be reported
  minimum_ratio: 0.01                          # filters out all peaks in experimental spectrum less intense than this multiple of the base peak intensity
  clear_mz_range: 0.0 0.0                      # for iTRAQ/TMT type data; will clear out all peaks in the specified m/z range
  add_C_cysteine: 0.000000                     # cysteine fixed modifications 
  add_Cterm_peptide: 0.000000                  # c-term peptide fixed modifications
  add_Cterm_protein: 0.000000                  # c-term protein fixed modifications
  add_D_aspartic_acid: 0.000000                # aspartic acid fixed modifications
  add_E_glutamic_acid: 0.000000                # glutamic acid fixed modifications
  add_F_phenylalanine: 0.000000                # phenylalanine fixed modifications
  add_G_glycine: 0.000000                      # glycine fixed modifications
  add_H_histidine: 0.000000                    # histidine fixed modifications
  add_I_isoleucine: 0.000000                   # isoleucine fixed modifications
  add_K_lysine: 0.000000                       # lysine fixed modifications
  add_L_leucine: 0.000000                      # leucine fixed modifications
  add_M_methionine: 0.000000                   # methionine fixed modifications
  add_N_asparagine: 0.000000                   # asparagine fixed modifications
  add_Nterm_peptide: 0.000000                  # n-term peptide fixed modifications
  add_Nterm_protein: 0.000000                  # n-term protein fixed modifications
  add_P_proline: 0.000000                      # proline fixed modifications
  add_Q_glutamine: 0.000000                    # glutamine fixed modifications
  add_R_arginine: 0.000000                     # arginine fixed modifications
  add_S_serine: 0.000000                       # serine fixed modifications
  add_T_threonine: 0.000000                    # threonine fixed modifications
  add_V_valine: 0.000000                       # valine fixed modifications
  add_W_tryptophan: 0.000000                   # tryptophan fixed modifications
  add_Y_tyrosine: 0.000000                     # tyrosine fixed modifications

peptideprophet:
  extension: pepXML                            # pepXML file extension
  accmass: false                               # use Accurate Mass model binning
  decoyprobs: false                            # compute possible non-zero probabilities for Decoy entries on the last iteration
  enzyme:                                      # enzyme used in sample (optional)
  exclude: false                               # exclude deltaCn*, Mascot*, and Comet* results from results (default Penalize * results)
  expectscore: false                           # use expectation value as the only contributor to the f-value for modeling
  forcedistr: false                            # bypass quality control checks, report model despite bad modeling
  glyc: false                                  # enable peptide Glyco motif model
  icat: false                                  # apply ICAT model (default Autodetect ICAT)
  instrwarn: false                             # warn and continue if combined data was generated by different instrument models
  leave: false                                 # leave alone deltaCn*, Mascot*, and Comet* results from results (default Penalize * results)
  maldi: false                                 # enable MALDI mode
  masswidth: 5                                 # model mass width (default 5)
  minpeplen: 7                                 # minimum peptide length not rejected (default 7)
  minpintt: 2                                  # minimum number of NTT in a peptide used for positive pI model (default 2)
  minpiprob: 0.9                               # minimum probability after first pass of a peptide used for positive pI model (default 0.9)
  minprob: 0.05                                # report results with minimum probability (default 0.05)
  minrtntt: 2                                  # minimum number of NTT in a peptide used for positive RT model (default 2)
  minrtprob: 0.9                               # minimum probability after first pass of a peptide used for positive RT model (default 0.9)
  neggamma: false                              # use Gamma distribution to model the negative hits
  noicat: false                                # do no apply ICAT model (default Autodetect ICAT)
  nomass: false                                # disable mass model
  nonmc: false                                 # disable NMC missed cleavage model
  nonparam: false                              # use semi-parametric modeling, must be used in conjunction with --decoy option
  nontt: false                                 # disable NTT enzymatic termini model
  optimizefval: false                          # (SpectraST only) optimize f-value function f(dot,delta) using PCA
  phospho: false                               # enable peptide Phospho motif model
  pi: false                                    # enable peptide pI model
  ppm: false                                   # use PPM mass error instead of Dalton for mass modeling
  zero: false                                  # report results with minimum probability 0

ptmprophet:
  autodirect: false                            # use direct evidence when the lability is high, use in combination with LABILITY
  cions:                                       # use specified C-term ions, separate multiple ions by commas (default: y for CID, z for ETD)
  direct: false                                # use only direct evidence for evaluating PTM site probabilities
  em: 1                                        # set EM models to 0 (no EM), 1 (Intensity EM Model Applied) or 2 (Intensity and Matched Peaks EM Models Applied)
  fragppmtol: 15                               # when computing PSM-specific mass_offset and mass_tolerance, use specified default +/- MS2 mz tolerance on fragment ions
  ifrags: false                                # use internal fragments for localization
  keepold: false                               # retain old PTMProphet results in the pepXML file
  lability: false                              # compute Lability of PTMs
  massdiffmode: false                          # use the Mass Difference and localize
  massoffset: 0                                # adjust the massdiff by offset (0 = use default)
  maxfragz: 0                                  # limit maximum fragment charge (default: 0=precursor charge, negative values subtract from precursor charge)
  maxthreads: 1                                # use specified number of threads for processing
  mino: 0                                      # use specified number of pseudo-counts when computing Oscore (0 = use default)
  minprob: 0                                   # use specified minimum probability to evaluate peptides
  mods:                                        # specify modifications
  mztol: 0.1                                   # use specified +/- MS2 mz tolerance on site specific ions
  nions:                                       # use specified N-term ions, separate multiple ions by commas (default: a,b for CID, c for ETD)
  nominofactor: false                          # disable MINO factor correction when MINO= is set greater than 0 (default: apply MINO factor correction)
  ppmtol: 1                                    # use specified +/- MS1 ppm tolerance on peptides which may have a slight offset depending on search parameters
  verbose: false                               # produce Warnings to help troubleshoot potential PTM shuffling or mass difference issues

proteinprophet:
  accuracy: false                              # equivalent to --minprob 0
  allpeps: false                               # consider all possible peptides in the database in the confidence model
  confem: false                                # use the EM to compute probability given the confidence
  delude: false                                # do NOT use peptide degeneracy information when assessing proteins
  excludezeros: false                          # exclude zero prob entries
  fpkm: false                                  # model protein FPKM values
  glyc: false                                  # highlight peptide N-glycosylation motif
  icat: false                                  # highlight peptide cysteines
  instances: false                             # use Expected Number of Ion Instances to adjust the peptide probabilities prior to NSP adjustment
  iprophet: false                              # input is from iProphet
  logprobs: false                              # use the log of the probabilities in the Confidence calculations
  maxppmdiff: 20                               # maximum peptide mass difference in PPM (default 20)
  minprob: 0.05                                # peptideProphet probabilty threshold (default 0.05)
  mufactor: 1                                  # fudge factor to scale MU calculation (default 1)
  nogroupwts: false                            # check peptide's Protein weight against the threshold (default: check peptide's Protein Group weight against threshold)
  nonsp: false                                 # do not use NSP model
  nooccam: false                               # non-conservative maximum protein list
  noprotlen: false                             # do not report protein length
  normprotlen: false                           # normalize NSP using Protein Length
  protmw: false                                # get protein mol weights
  softoccam: false                             # peptide weights are apportioned equally among proteins within each Protein Group (less conservative protein count estimate)
  unmapped: false                              # report results for UNMAPPED proteins

filter:
  psmFDR: 0.01                                 # psm FDR level (default 0.01)
  peptideFDR: 0.01                             # peptide FDR level (default 0.01)
  ionFDR: 0.01                                 # peptide ion FDR level (default 0.01)
  proteinFDR: 0.01                             # protein FDR level (default 0.01)
  peptideProbability: 0.7                      # top peptide probability threshold for the FDR filtering (default 0.7)
  proteinProbability: 0.5                      # protein probability threshold for the FDR filtering (not used with the razor algorithm) (default 0.5)
  peptideWeight: 1                             # threshold for defining peptide uniqueness (default 1)
  razor: false                                 # use razor peptides for protein FDR scoring
  picked: false                                # apply the picked FDR algorithm before the protein scoring
  mapMods: false                               # map modifications acquired by an open search
  models: false                                # print model distribution
  sequential: false                            # alternative algorithm that estimates FDR using both filtered PSM and Protein lists

freequant:
  peakTimeWindow: 0.4                          # specify the time windows for the peak (minute) (default 0.4)
  retentionTimeWindow: 3                       # specify the retention time window for xic (minute) (default 3)
  tolerance: 10                                # m/z tolerance in ppm (default 10)
  isolated: false                              # use the isolated ion instead of the selected ion for quantification

labelquant:
  annotation:                                  # annotation file with custom names for the TMT channels
  bestPSM: false                               # select the best PSMs for protein quantification
  level: 2                                     # ms level for the quantification
  minProb: 0.7                                 # only use PSMs with a minimum probability score
  plex:                                        # number of channels
  purity: 0.5                                  # ion purity threshold (default 0.5)
  removeLow: 0.0                               # ignore the lower 3% PSMs based on their summed abundances
  tolerance: 20                                # m/z tolerance in ppm (default 20)
  uniqueOnly: false                            # report quantification based on only unique peptides

report:
  msstats: false                               # create an output compatible to MSstats
  withDecoys: false                            # add decoy observations to reports
  mzID: false                                  # create a mzID output

cluster:
  organismUniProtID:                           # UniProt proteome ID
  level: 0.9                                   # cluster identity level (default 0.9)
                  
abacus:
  labels: false                                # indicates whether the data sets include TMT labels or not
  protein: true                                # global level protein report
  peptide: false                               # global level peptide report
  proteinprobability: 0.9                      # minimum protein probability (default 0.9)
  peptideProbability: 0.5                      # minimum peptide probability (default 0.5)
  picked: false                                # apply the picked FDR algorithm before the protein scoring
  razor: false                                 # use razor peptides for protein FDR scoring
  uniqueOnly: false                            # report TMT quantification based on only unique peptides

tmt-integrator:
  path:                                        # path to TMT-Integrator jar
  memmory: 8                                   # how much memory in GB to use
  output:                                      # the location of output files
  combined_protein: combined.prot.xml          # the combined_protein.tsv generated by philosopher
  channel_num: 10                              # the number of TMT channels
  ref_tag: pool                                # the tag for identifying reference channel
  groupby: 0                                   # 0: gene; 1:Protein ID; 2: Peptide; 3: Phospho Site Location
  psm_norm: false                              # normalization on psm level
  outlier_removal: true                        # applying outlier removal
  prot_norm: 2                                 # normalization on protein level, options: 0=None, 1=MD, 2=GN
  min_pep_prob: 0                              # minimum peptide probability
  min_purity: 0.5                              # minimum purity
  min_percent: 0.05                            # the percentage of PSMs being used for downstream process
  unique_pep: false                            # using unique peptides or not
  unique_gene: 0                               # using unique genes (0=PSMs having shared genes; 1=PSMs don't have shared genes; 2=PSMs only have unique single genes)
  best_psm: true                               # only keeping the PSM having the highest summed TMT intensity
  overlabel: true                              # allow over labeling or not
  prot_exclude: sp|;tr|;                       # excluding proteins with these terms
  pep_tag: n[43];S[316];n[230]                 # used peptides with the modification tag (separator: :wink:
  mod_pep: false                               # using modified peptides or not
  mod_mass: 79.9663                            # used peptides with the modification mass
  target_mod_tag: K[170]                       # used peptides with the target modification tag (currently only allowing one target modification)
  min_site_prob: 0.9                           # minimum modification site probability
  PTMProphet: true                             # using PTMProphet result (only for phosphorylated data)
  ms1_int: true                                # using MS1 intensity. If not, reference intensities are used for abundance calculation.
  top3_pep: true                               # using top 3 intensive peptides